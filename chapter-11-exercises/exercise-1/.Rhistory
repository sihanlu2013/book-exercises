# Install devtools package: allows installations from GitHub
install.packages("devtools")
# Install "fueleconomy" dataset from GitHub
devtools::install_github("hadley/fueleconomy")
# Use the `libary()` function to load the "fueleconomy" package
library(fueleconomy)
# You should now have access to the `vehicles` data frame
# You can use `View()` to inspect it
View(fueleconomy)
# You should now have access to the `vehicles` data frame
# You can use `View()` to inspect it
View(library(fueleconomy))
# You should now have access to the `vehicles` data frame
# You can use `View()` to inspect it
View(library(fueleconomy))
# You should now have access to the `vehicles` data frame
# You can use `View()` to inspect it
View(library("fueleconomy"))
# You should now have access to the `vehicles` data frame
# You can use `View()` to inspect it
View("fueleconomy")
# You should now have access to the `vehicles` data frame
# You can use `View()` to inspect it
View(library("fueleconomy"))
# You should now have access to the `vehicles` data frame
# You can use `View()` to inspect it
View(fueleconomy)
# You should now have access to the `vehicles` data frame
# You can use `View()` to inspect it
View(vehicles)
# Select the different manufacturers (makes) of the cars in this data set.
# Save this vector in a variable
makes <- select(vehicles, make)
# Select the different manufacturers (makes) of the cars in this data set.
# Save this vector in a variable
makes <- select.list(vehicles, make)
# Use the `unique()` function to determine how many different car manufacturers
# are represented by the data  the data set for vehicles manufactured in 1997
unique(makes)
# Select the different manufacturers (makes) of the cars in this data set.
# Save this vector in a variable
makes <- select(vehicles, make)
# Install devtools package: allows installations from GitHub
install.packages("devtools")
install.packages("devtools")
library("devtools", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
# Select the different manufacturers (makes) of the cars in this data set.
# Save this vector in a variable
makes <- select(vehicles, make)
# Use the `unique()` function to determine how many different car manufacturers
# are represented by the data  the data set for vehicles manufactured in 1997
unique(makes, 1997)
# Use the `unique()` function to determine how many different car manufacturers
# are represented by the data  the data set for vehicles manufactured in 1997
makes_1997 <- filters(makes, year == 1997)
# Use the `unique()` function to determine how many different car manufacturers
# are represented by the data  the data set for vehicles manufactured in 1997
makes_1997 <- filter(makes, year == 1997)
# Use the `unique()` function to determine how many different car manufacturers
# are represented by the data  the data set for vehicles manufactured in 1997
makes_1997 <- filter(vehicles, makes, year == 1997)
#the data set for vehicles manufactured in 1997
vehicles[vehicles$year == 1997, ]
#the data set for vehicles manufactured in 1997
vehicles[vehicles$year == 1997, ]
# You should now have access to the `vehicles` data frame
# You can use `View()` to inspect it
View(vehicles)
# Install devtools package: allows installations from GitHub
install.packages("devtools")
# Install "fueleconomy" dataset from GitHub
devtools::install_github("hadley/fueleconomy")
install.packages("devtools")
install.packages("devtools")
# Install "fueleconomy" dataset from GitHub
devtools::install_github("hadley/fueleconomy")
# Use the `libary()` function to load the "fueleconomy" package
library(fueleconomy)
# You should now have access to the `vehicles` data frame
# You can use `View()` to inspect it
View(vehicles)
#the data set for vehicles manufactured in 1997
vehicles[vehicles$year == 1997, ]
df <- data.frame(names = c("ada", "Bob), ages=c(32, 17))
order(df$age)
df <- data.frame(names = c("ada", "Bob"), ages =c(32, 17))
df <- data.frame(names = c("ada", "Bob"), ages =c(32, 17))
View(df)
order(df$age)
# Install and load the "fueleconomy" package
#install.packages("devtools")
#devtools::install_github("hadley/fueleconomy")
library(fueleconomy)
# Install and load the "dplyr" library
library("dplyr")
# Select the different manufacturers (makes) of the cars in this data set.
# Save this vector in a variable
makes <- select(vehicles, make)
# Use the `distinct()` function to determine how many different car manufacturers
# are represented by the data set
distinct(makes)
# Filter the data set for vehicles manufactured in 1997
car_1997 <- filter(vehicles, year == 1997)
# Arrange the 1997 cars by highway (`hwy`) gas milage
arrange(cars_1997, -hwy)
# Filter the data set for vehicles manufactured in 1997
cars_1997 <- filter(vehicles, year == 1997)
# Arrange the 1997 cars by highway (`hwy`) gas milage
arrange(cars_1997, -hwy)
# Mutate the 1997 cars data frame to add a column `average` that has the average
# gas milage (between city and highway mpg) for each car
cars_1997 <- mutate(cars_1997, average = mean(hwy, cty) )
# Mutate the 1997 cars data frame to add a column `average` that has the average
# gas milage (between city and highway mpg) for each car
cars_1997 <- mutate(cars_1997, average = (hwy + cty)/2 )
View(cars_1997)
# Filter the whole vehicles data set for 2-Wheel Drive vehicles that get more
# than 20 miles/gallon in the city.
# Save this new data frame in a variable.
filter(vehicles, drive =="2-Wheel Drive", city > 20)
# Filter the whole vehicles data set for 2-Wheel Drive vehicles that get more
# than 20 miles/gallon in the city.
# Save this new data frame in a variable.
filter(vehicles, drive =="2-Wheel Drive", cty > 20)
# Filter the whole vehicles data set for 2-Wheel Drive vehicles that get more
# than 20 miles/gallon in the city.
# Save this new data frame in a variable.
cars_1997_2wd <- filter(vehicles, drive =="2-Wheel Drive", cty > 20)
# Of the above vehicles, what is the vehicle ID of the vehicle with the worst
# hwy mpg?
# Hint: filter for the worst vehicle, then select its ID.
filter(cars_1997_2wd, hwy == min(hwy))
# Write a function that takes a `year_choice` and a `make_choice` as parameters,
# and returns the vehicle model that gets the most hwy miles/gallon of vehicles
# of that make in that year.
# You'll need to filter more (and do some selecting)!
select(
filter(
cars_1997_2wd,
hwy = min(hwy)
),
id
)
# Write a function that takes a `year_choice` and a `make_choice` as parameters,
# and returns the vehicle model that gets the most hwy miles/gallon of vehicles
# of that make in that year.
# You'll need to filter more (and do some selecting)!
select(
filter(
cars_1997_2wd,
hwy == min(hwy)
),
id
)
library(nycflights13)
# Install the `"nycflights13"` package. Load (`library()`) the package.
# You'll also need to load `dplyr`
library(nycflights13)
library("dplyr")
